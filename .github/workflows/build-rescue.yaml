name: Build REG-linux RESCUE

on:
  push:
    branches:
    - main
  workflow_dispatch:

concurrency:
    group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
  contents: write

env:
  LANG: en_US.UTF-8
  LANGUAGE: en_US:en
  LC_ALL: en_US.UTF-8
  TZ: Europe/Paris
  FORCE_UNSAFE_CONFIGURE: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build REG-linux RESCUE
    runs-on: ubuntu-latest
    container: reglinux/reglinux-build:latest
    strategy:
      matrix:
        platform: [aarch64, armhf, armv7, mipsel, riscv64, x86_64]
    steps:
      - name: Init buildroot
        shell: bash
        run: |
          apt-get update
          apt-get install -y curl jq
          cd ..
          rm -rf ./REG-rescue
          git clone --branch main "https://${GITHUB_REPOSITORY_OWNER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" ./REG-rescue
          cd REG-rescue
          git submodule init
          git submodule update
          echo "RESCUEVERSION=$(grep -m 1 RESCUE_SYSTEM_VERSION /__w/REG-rescue/REG-rescue/package/core/rescue-system/rescue-system.mk | sed -e "s/.*=[ ]*//")" >> $GITHUB_ENV
          echo "SUFFIXDATE=$(date +%Y%m%d)" >> $GITHUB_ENV
          echo "DORELEASE=${{ false }}" >> $GITHUB_ENV
          mkdir -p /__w/REG-rescue/REG-linux-rescue-COMPILED
      - name: Compile ${{ matrix.platform }}
        if: ${{ ! cancelled() }}
        shell: bash
        run: |
          if curl -sfLO --output-dir "/__w/REG-rescue/REG-linux-rescue-COMPILED" "$(curl --silent "https://api.github.com/repos/REG-Linux/REG-rescue/releases/latest" | jq -r '.assets[] | "\(.browser_download_url)"' | sort | grep -m1 ${{ matrix.platform }})"; then
          [[ -f /__w/REG-rescue/REG-linux-rescue-COMPILED/REG-linux-rescue-${{ matrix.platform }}-${{ env.RESCUEVERSION }}-${{ env.SUFFIXDATE }} ]] && exit 0 || rm -f /__w/REG-rescue/REG-linux-rescue-COMPILED/REG-linux-rescue-${{ matrix.platform }}-*
          fi
          /__w/REG-rescue/REG-rescue/configs/createDefconfig.sh /__w/REG-rescue/REG-rescue/configs/rescue-${{ matrix.platform }}
          make O=/__w/REG-rescue/REG-rescue/output/${{ matrix.platform }} BR2_EXTERNAL=/__w/REG-rescue/REG-rescue -C /__w/REG-rescue/REG-rescue/buildroot rescue-${{ matrix.platform }}_defconfig
          cd /__w/REG-rescue/REG-rescue/output/${{ matrix.platform }}
          make
          find /__w/REG-rescue/REG-rescue/output/${{ matrix.platform }}/ -type f -name 'REG-linux-rescue-${{ matrix.platform }}-*' -exec mv '{}' /__w/REG-rescue/REG-linux-rescue-COMPILED/REG-linux-rescue-${{ matrix.platform }}-${{ env.RESCUEVERSION }}-${{ env.SUFFIXDATE }} \; && echo "DORELEASE=${{ true }}" >> $GITHUB_ENV
          cd /__w/REG-rescue/REG-rescue
          rm -rf /__w/REG-rescue/REG-rescue/output/${{ matrix.platform }}
      - name: Create release
        if: ${{ env.DORELEASE && ! cancelled() }}
        shell: bash
        run: |
          gh release delete ${{ env.RESCUEVERSION }} --cleanup-tag -y || ${{ true }}
          gh release create ${{ env.RESCUEVERSION }} --prerelease --generate-notes --target "main" --title "REG-linux Rescue v${{ env.RESCUEVERSION }}" /__w/REG-rescue/REG-linux-rescue-COMPILED/*
      - name: Upload artifacts in case git release fails
        if: ${{ env.DORELEASE && ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: REG-linux-rescue-${{ env.RESCUEVERSION }}
          path: /__w/REG-rescue/REG-linux-rescue-COMPILED/
