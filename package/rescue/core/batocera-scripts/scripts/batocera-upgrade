#!/bin/bash

# Cleanup upgrade files
do_clean() {
    rm -f "/userdata/system/upgrade/boot.tar.zst"
    rm -f "/userdata/system/upgrade/boot.tar.zst.md5"
    echo "removed downloaded files, sync disk now"
}

# Print upgrade messages to terminal
do_upgmsg() {
    echo "$1"
}

# ---- MAIN ----
echo "Starting the upgrade..."
board=$(cat /boot/boot/batocera.board)
oldboard="$board"
TERMINAL=1

# Check if the local file exists
if [ -f "/userdata/system/upgrade/boot.tar.zst" ]; then
    size=$(du -m "/userdata/system/upgrade/boot.tar.zst" | awk '{print $1}')
    echo "Using local file: /userdata/system/upgrade/boot.tar.zst (${size}MB)"
else
    echo "Error: Local file /userdata/system/upgrade/boot.tar.zst not found."
    exit 1
fi

# check free space on fs
filesystems="/userdata /boot"

# Check free space on filesystems
for fs in $filesystems
do
    freespace=$(df -m "${fs}" | tail -1 | awk '{print $4}')
    test $? -eq 0 || exit 1
    if test "${size}" -gt "${freespace}"
    then
        echo "Not enough space on ${fs} to perform the update"
        exit 1
    fi
done

# check md5 checksum
if test -e "/userdata/system/upgrade/boot.tar.zst.md5"
then
    DISTMD5=$(cat "/userdata/system/upgrade/boot.tar.zst.md5")
    CURRMD5=$(md5sum "/userdata/system/upgrade/boot.tar.zst" | sed -e s+' .*$'++)
    if test "${DISTMD5}" = "${CURRMD5}"
    then
        do_upgmsg "Checksum validated ..." 2
    else
        do_upgmsg "Checksum error ..." 5
        exit 1
    fi
else
    do_upgmsg "Missing md5 file - proceed ..." 3
fi

# remount /boot in rw
echo "remounting /boot in rw"
if ! mount -o remount,rw /boot
then
    exit 1
fi

# backup boot files
# all these files doesn't exist on non rpi platform, so, we have to test them
# don't put the boot.ini file while it's not really to be customized
do_upgmsg "Backing up config files ..." 0.5
BOOTFILES="config.txt batocera-boot.conf"
for BOOTFILE in ${BOOTFILES}
do
    if test -e "/boot/${BOOTFILE}"
    then
        if ! cp "/boot/${BOOTFILE}" "/boot/${BOOTFILE}.upgrade"
        then
            exit 1
        fi
    fi
done

# unmount modules and firmware
umount /lib/modules
umount /lib/firmware

# delete files from /boot
do_upgmsg "Removing /boot files ..."
rm /boot/linux
rm /boot/modules
rm /boot/firmware
rm /boot/initrd.lz4
rm /boot/reglinux

# extract file on /boot
do_upgmsg "Extracting files ..."
if ! (cd /boot && zstd -dc < "/userdata/system/upgrade/boot.tar.zst" | tar xvf - --no-same-owner)
then
    exit 1
fi

# restore boot files
do_upgmsg "Restoring config files ..." 0.5
for BOOTFILE in ${BOOTFILES}
do
    if test -e "/boot/${BOOTFILE}.upgrade"
    then
        if ! mv "/boot/${BOOTFILE}.upgrade" "/boot/${BOOTFILE}"
        then
            echo "Outch" >&2
        fi
    fi
done

# remount /boot in ro
do_upgmsg "Doing final cleanups ..." 0.5
rm /boot/REG_UPDATE
if ! mount -o remount,ro /boot
then
    exit 1
fi

# a sync with some cleanups of downloaded and created files
do_clean
sync

# verify update is for same board, provide a warning if not
newboard=$(cat /boot/boot/batocera.board)
if [ "$oldboard" != "$newboard" ]
then
    echo; echo "WARNING: Current board is ${oldboard}, applied update is for ${newboard}"
fi

echo; echo "Done. Let's reboot the system so that the changes take effect!"
reboot
exit 0
